
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

  # Start window numbering at
set -g base-index 1
# Change the main key
set -g focus-events on
set -g mouse on
set -s set-clipboard on
# ----------------------
set -s escape-time 0 # address vim mode switching delay (http://superuser.com/a/252717/65504)

# Status Bar
set -g history-limit 10000
# -----------------------
set -g display-time 3000 # display messages for 3 seconds
set -g status-interval 1
set-option -sa terminal-overrides ',alacritty:RGB'
set-option -g default-shell /usr/bin/zsh
set  -g default-terminal "tmux-256color"
set -ag terminal-overrides ",alacritty:RGB"
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0 set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -ga terminal-features '*:clipboard:strikethrough:usstyle:RGB'

# is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L; refresh-client -S"
# bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D; refresh-client -S"
# bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U; refresh-client -S"
# bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R; refresh-client -S"
# bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l; refresh-client -S"

# bind-key -T copy-mode-vi C-h select-pane -L\; refresh-client -S
# bind-key -T copy-mode-vi C-j select-pane -D\; refresh-client -S
# bind-key -T copy-mode-vi C-k select-pane -U\; refresh-client -S
# bind-key -T copy-mode-vi C-l select-pane -R\; refresh-client -S
# bind-key -T copy-mode-vi C-\\ select-pane -l\; refresh-client -S
 bind-key r source-file ~/.config/tmux/tmux.conf \; display-message "~/.tmux.conf reloaded"
# smart pane switching with awareness of vim splits

is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'



# bind -r ^ last-window
# bind -r k select-pane -U
# bind -r j select-pane -D
# bind -r h select-pane -L
# bind -r l select-pane -R
# reseze panes
# tmux sessionizer
# bind-key -r f run-shell "tmux neww tmux-sessionizer"
# bind-key -r g run-shell "tmux neww tmux-sessionizer default"
# bind-key |               split-window -h -c "#{pane_current_path}"
# bind-key -               split-window -v -c "#{pane_current_path}"

     # set update frequencey (default 15 seconds)


# Tmux tilish

# Better mouse mode
# set -g @emulate-scroll-for-no-mouse-alternate-buffer "on"
# set -g @scroll-speed-num-lines-per-scroll 2
# set -g @scroll-down-exit-copy-mode "off"

# Tmux yank
set -g @yank_action 'copy-pipe' # or 'copy-pipe-and-cancel' for the default

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @plugin 'jimeh/tmux-themepack'
# set -g @themepack 'powerline/block/blue'


# Auto restore tmux
set -g @continuum-restore 'on'
set -g @resurrect-strategy-nvim 'session'
# Use vim keybindings in copy mode
set -g status-keys emacs
setw -g mode-keys vi

# status
set -g status "on"
set -g status-style "bg=#020221,none,align=left"

# messages
set -g message-style "fg=#b4b4b9,bg=#020221"
set -g message-command-style "fg=#99a4bc,bg=#020221"

# panes
set -g pane-border-style "fg=#57575e,bg=#151521"
set -g pane-active-border-style "fg=#57575e,bg=#020221"

# put a line above the status
set -g pane-border-status bottom
set -g pane-border-format '─'

# selection
set -g mode-style "fg=#dfdfe5,bg=#2f0e82"

# active / inactive pane bg
set -g window-style "bg=#151521"
set -g window-active-style "bg=#020221"

# window status
setw -g window-status-style "fg=#b4b4b9,bg=black,none"
setw -g window-status-activity-style "fg=magenta,bg=#36363a,none"
setw -g window-status-separator ""
setw -g window-status-format "#[fg=#787882,bg=#020221] #I:#W "
setw -g window-status-current-format "#[fg=white,bg=#020221] #I#[fg=#787882]:#[fg=yellow]#{?window_zoomed_flag,#[fg=#c8d0e3](,}#W#{?window_zoomed_flag,#[fg=#c8d0e3]),} "

set -g status-left-style "none"
set -g status-right-style "none"
set -g status-left-length "100"
set -g status-right-length "100"
set -g status-left "#[fg=white] #S #[fg=#57575e]│ "
set -g status-right "#[fg=yellow,bg=#36363a]$USER@#h #[fg=#787882]│ #[fg=white]%d/%m/%Y %H:%M "

set -g "window-style" "bg=default"
set -g "window-active-style" "bg=default"




run -b "${HOME}/.tmux/plugins/tpm/tpm"
